/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/assets/style/style.scss":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/assets/style/style.scss ***!
  \******************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@keyframes buffer-expand {\n  0% {\n    transform: translateY(calc(1rem - 100%));\n  }\n  100% {\n    transform: translateY(0);\n  }\n}\n@keyframes buffer-collapse {\n  0% {\n    transform: translateY(0);\n  }\n  100% {\n    transform: translateY(calc(1rem - 100%));\n  }\n}\n#interface-hit-box {\n  position: absolute;\n  width: calc(100vw - 10rem);\n  min-height: 5rem;\n  left: 3rem;\n  padding: 0 2rem 2rem 2rem;\n  z-index: 1;\n}\n#interface-hit-box #template-interface {\n  min-height: calc(100% - 4rem);\n  padding: 0 1rem 1rem 1rem;\n  margin: 0 auto;\n  border-radius: 0 0 15px 15px;\n  background: #248;\n  box-shadow: 0 0 7px 0 #000;\n  transform: translateY(calc(1rem - 100%));\n  animation: buffer-collapse 0.2s;\n}\n#interface-hit-box #template-interface.expanded, #interface-hit-box #template-interface.expanded-edit {\n  animation: buffer-expand 0.2s;\n  transform: translateY(0);\n}\n#interface-hit-box #template-interface::after {\n  content: \" \";\n  position: absolute;\n  top: 0;\n  left: 1rem;\n  width: calc(100% - 2rem);\n  height: calc(100% - 1rem);\n  background: transparent;\n  border-radius: 0 0 7.5px 7.5px;\n  box-shadow: 0 0 15px 0 #222 inset;\n  pointer-events: none;\n}\n#interface-hit-box #template-interface #container {\n  position: relative;\n  width: calc(100% - 1.5rem);\n  min-height: calc(100% - 2.5rem);\n  background: #248;\n  border-radius: 0 0 15px 15px;\n  padding: 0.75rem;\n  margin: 0 auto;\n  font-family: Arial, Helvetica, sans-serif;\n  display: flex;\n  gap: 5px;\n  overflow-x: auto;\n  overflow-y: hidden;\n}\n#interface-hit-box #template-interface #container.firefox-scrollbar {\n  scrollbar-color: #368 #1d3a65;\n}\n#interface-hit-box #template-interface #container::-webkit-scrollbar {\n  height: 1.25rem;\n  background: #247;\n  border-radius: 15px;\n  box-shadow: 0 0 10px #222 inset;\n}\n#interface-hit-box #template-interface #container::-webkit-scrollbar-thumb {\n  background: #368;\n  border-radius: 15px;\n  box-shadow: 0 0 5px #222 inset;\n}\n#interface-hit-box #template-interface #container::-webkit-scrollbar-thumb:hover {\n  background: #2c778f;\n  cursor: pointer;\n}\n#interface-hit-box #template-interface #container .buffer {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  padding: 0.5rem 1.5rem;\n  font-size: 1.2rem;\n  white-space: nowrap;\n  color: #9ad;\n  border-radius: 10px;\n  background: #359;\n  box-shadow: 0 0 10px #248 inset;\n  border: none;\n  cursor: pointer;\n  user-select: none;\n}\n#interface-hit-box #template-interface #container .buffer:empty::before {\n  content: \"Enter Name\";\n  color: #999;\n}\n#interface-hit-box #template-interface #container .buffer:hover {\n  background: #4060c0;\n}\n#interface-hit-box #template-interface #container .buffer:focus {\n  background: #4060df;\n  outline: none;\n}\n#interface-hit-box #template-interface #container .buffer.active {\n  color: #abf;\n  text-decoration: underline;\n}\n#interface-hit-box #template-interface #container .buffer::after {\n  content: \" \";\n  position: absolute;\n  bottom: 0;\n  right: -5px;\n  width: 5px;\n  height: 100%;\n  background: #248;\n}\n#interface-hit-box #template-interface #container #buffer-more {\n  position: relative;\n  width: 1.5rem;\n  margin: auto 0;\n  padding: 0.5rem;\n  user-select: none;\n}\n#interface-hit-box #template-interface #container #buffer-more:hover {\n  cursor: pointer;\n  filter: invert(34%) sepia(57%) saturate(1323%) hue-rotate(200deg) brightness(89%) contrast(87%);\n}\n\n@keyframes node-expand {\n  25% {\n    scale: calc(var(--node-scale-multiplier) * 0.85);\n  }\n  100% {\n    scale: var(--node-scale-multiplier);\n  }\n}\n@keyframes node-collapse {\n  0% {\n    scale: var(--node-scale-multiplier);\n  }\n  75% {\n    scale: calc(var(--node-scale-multiplier) * 0.85);\n  }\n}\n.holder {\n  position: relative;\n  pointer-events: none;\n}\n.holder:first-child {\n  margin-top: 1.25rem;\n}\n.holder:last-child {\n  margin-bottom: 1.25rem;\n}\n.holder::before, .holder:last-child::after {\n  content: \" \";\n  position: absolute;\n  top: calc(-2.5px - 0.675rem);\n  width: 100%;\n  height: 5px;\n  background: #247;\n  box-shadow: 0 0 10px #333 inset;\n}\n.holder:last-child::after {\n  top: auto;\n  bottom: -0.675rem;\n}\n\n.node {\n  position: relative;\n  width: 80%;\n  background: color-mix(in oklab, var(--node-color) 60%, #000);\n  border-radius: 7.5px;\n  margin: 0 auto 0 auto;\n  box-shadow: 0 0 10px #333;\n  pointer-events: all;\n  cursor: grab;\n}\n.node::before, .node::after {\n  content: \" \";\n  position: absolute;\n  top: 0;\n  width: 1.25rem;\n  height: 100%;\n  background: color-mix(in oklab, var(--node-color) 80%, #000);\n}\n.node::before {\n  left: 0;\n  border-radius: 7.5px 0 0 7.5px;\n}\n.node::after {\n  right: 0;\n  border-radius: 0 7.5px 7.5px 0;\n}\n.node {\n  transition: transform 0.2s ease-in-out;\n}\n.node:hover:not(.template) {\n  transform: scale(1.1);\n}\n.node.template {\n  position: fixed;\n  transform: translate(-50%, -50%);\n  transform-origin: top left;\n  transition: scale 0.2s ease-in-out;\n}\n.node.template.dragging {\n  scale: 1.1;\n  cursor: grabbing;\n}\n.node.template .input_ports *::after, .node.template .output_ports *::after {\n  content: \"\";\n  position: absolute;\n  left: calc(50% - 15px);\n  top: calc(50% - 15px);\n  width: 30px;\n  aspect-ratio: 1;\n  cursor: pointer;\n}\n.node .name {\n  position: absolute;\n  width: calc(100% - 1rem);\n  border-top-left-radius: 7.5px;\n  user-select: none;\n  background: var(--node-color);\n  text-align: center;\n  color: var(--node-name-color);\n  text-transform: uppercase;\n  font-size: 1.2rem;\n  font-family: Arial, Helvetica, sans-serif;\n}\n.node .input_ports, .node .output_ports {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n  position: relative;\n  width: 1rem;\n}\n.node .input_ports > *, .node .output_ports > * {\n  position: relative;\n  width: 0.5rem;\n  aspect-ratio: 1;\n  background: #fff;\n  border: 2px solid #ccc;\n  border-radius: 40%;\n}\n.node .input_ports {\n  padding-top: 2.5rem;\n  padding-bottom: 1rem;\n  left: -0.5rem;\n}\n.node .output_ports {\n  justify-content: center;\n  position: absolute;\n  right: -0.5rem;\n  margin-top: auto;\n  padding: 0;\n  bottom: 1rem;\n  z-index: 1;\n}\n\n@keyframes ui-expand {\n  0% {\n    transform: translateX(calc(1rem - 100%));\n  }\n  70% {\n    transform: translateX(-1rem);\n  }\n  75% {\n    transform: translateX(0);\n  }\n}\n@keyframes ui-collapse {\n  0% {\n    transform: translateX(0);\n  }\n  70%, 80% {\n    transform: translateX(calc(2rem - 100%));\n  }\n  100% {\n    transform: translateX(calc(1rem - 100%));\n  }\n}\n#node-interface {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  row-gap: 1rem;\n  background: #248;\n  position: relative;\n  width: 15rem;\n  height: calc(100% - 13rem);\n  padding: 1rem;\n  margin: auto 0;\n  animation: ui-collapse 0.5s ease-out;\n  border-radius: 0 15px 15px 0;\n  box-shadow: 3px 0 10px 0 #000;\n}\n#node-interface #selection .node:not(:hover) {\n  scale: var(--node-scale-multiplier);\n  animation: node-collapse 0.5s;\n}\n#node-interface {\n  transform: translateX(calc(1rem - 100%));\n}\n#node-interface.expanded {\n  animation: ui-expand 0.5s;\n  transform: translateX(0);\n}\n#node-interface.expanded #selection .node {\n  animation: node-expand 0.5s;\n}\n#node-interface #header {\n  width: 100%;\n  height: 4rem;\n  background: #469;\n  border-radius: 15px;\n  box-shadow: 0 0 15px #000 inset;\n}\n#node-interface #selection {\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n  width: 100%;\n  height: calc(100% - 5rem);\n  background: #469;\n  border-radius: 15px;\n  box-shadow: 0 0 15px #000 inset;\n  overflow-y: auto;\n  overflow-x: hidden;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n#node-interface #selection.firefox-scrollbar {\n  scrollbar-color: #368 #1d3a65;\n}\n#node-interface #selection::-webkit-scrollbar {\n  width: 1.25rem;\n  background: #247;\n  border-radius: 0 15px 15px 0;\n  box-shadow: 0 0 10px #222 inset;\n}\n#node-interface #selection::-webkit-scrollbar-thumb {\n  background: #368;\n  border-radius: 15px;\n  box-shadow: 0 0 5px #222 inset;\n}\n#node-interface #selection::-webkit-scrollbar-thumb:hover {\n  background: #2c778f;\n  cursor: pointer;\n}\n#node-interface #visuals #drawer-handle {\n  position: absolute;\n  top: 50%;\n  transform: translate(calc(0.5rem - 2px), -50%);\n  fill: #248;\n  width: 3rem;\n  padding: 0.5rem;\n  cursor: pointer;\n  user-select: none;\n  filter: drop-shadow(5px 2px 4px rgba(0, 0, 0, 0.7));\n}\n\n#node-playground {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: #333;\n}\n#node-playground #background {\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  pointer-events: none;\n  user-select: none;\n  margin: 37.5vh calc(50vw - 20.75vh);\n}\n#node-playground #background #background-logo {\n  width: 25vh;\n  height: 25vh;\n  filter: brightness(1.5);\n  pointer-events: none;\n}\n#node-playground #background #background-name {\n  font-family: sans-serif;\n  font-size: 8vh;\n  font-weight: 1000;\n  line-height: 0.8;\n  margin: auto 0 0 -2.5vh;\n  color: #4f4f4f;\n  opacity: 0.6;\n}\n#node-playground #background #background-name #df {\n  position: absolute;\n  top: -0.75vh;\n  font-size: 1.5em;\n}\n#node-playground #blue-screen {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: radial-gradient(circle, rgba(0, 100, 150, 0.2) 20%, rgba(0, 255, 255, 0.1) 100%);\n}\n\nhtml, body {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n  background: #333;\n  user-select: none;\n}\n\n#main-screen {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  display: flex;\n  flex-direction: column;\n  background: #3060dd;\n}\n\n.preload {\n  animation-duration: 0s !important;\n  transition: background-color 0s, opacity 0s, color 0s, width 0s, height 0s, padding 0s, margin 0s !important;\n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://sdf_studio/./src/assets/style/style.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://sdf_studio/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://sdf_studio/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/assets/style/style.scss":
/*!*************************************!*\
  !*** ./src/assets/style/style.scss ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./style.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/assets/style/style.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_style_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://sdf_studio/./src/assets/style/style.scss?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://sdf_studio/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://sdf_studio/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://sdf_studio/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://sdf_studio/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://sdf_studio/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://sdf_studio/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst logger_1 = __webpack_require__(/*! ./main/core/logger */ \"./src/main/core/logger.ts\");\r\nconst main_1 = __webpack_require__(/*! ./main/main */ \"./src/main/main.ts\");\r\nconst ErrorScreen_1 = __webpack_require__(/*! ./main/simulation/ui/ErrorScreen */ \"./src/main/simulation/ui/ErrorScreen.ts\");\r\nconst logger = new logger_1.Logger(\"Index Initialization\", \"✅\");\r\nlogger.log(\"Renderer initialized successfully!\");\r\nlogger.log(\"Imported main successfully!\");\r\nlogger.log(\"Starting the main process...\");\r\ntry {\r\n    const main = new main_1.Main();\r\n    main.initialize();\r\n}\r\ncatch (error) {\r\n    let msg = error;\r\n    if (error instanceof Error)\r\n        msg = error.message;\r\n    ErrorScreen_1.ErrorScreen.setActive(msg);\r\n}\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/index.ts?");

/***/ }),

/***/ "./src/main/core/canvas.ts":
/*!*********************************!*\
  !*** ./src/main/core/canvas.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Canvas = void 0;\r\nconst signal_1 = __webpack_require__(/*! ./signal */ \"./src/main/core/signal.ts\");\r\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/main/core/utils.ts\");\r\nclass Canvas {\r\n    constructor() {\r\n        this.onResize = new signal_1.Signal();\r\n    }\r\n    initialize(data = {}) {\r\n        if (!data.parent)\r\n            data.parent = document.body;\r\n        this.mainCanvas = (0, utils_1.createCanvas)();\r\n        (0, utils_1.checkFor)(this.getWebGLContext(), \"Unable to initialize WebGL. Your browser or machine may not support it.\");\r\n    }\r\n    getWebGLContext() {\r\n        return this.mainCanvas.getContext(\"webgl2\");\r\n    }\r\n    getWebGLDrawParameters() {\r\n        return {\r\n            width: this.mainCanvas.width,\r\n            height: this.mainCanvas.height,\r\n            ctx: this.getWebGLContext()\r\n        };\r\n    }\r\n}\r\nexports.Canvas = Canvas;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/canvas.ts?");

/***/ }),

/***/ "./src/main/core/fpsCounter.ts":
/*!*************************************!*\
  !*** ./src/main/core/fpsCounter.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FPSCounter = void 0;\r\nclass FPSCounter {\r\n    constructor() {\r\n        this.lastTime = performance.now();\r\n        this.FPS = 0;\r\n    }\r\n    start() {\r\n        const now = performance.now();\r\n        const dt = now - this.lastTime;\r\n        this.lastTime = now;\r\n        this.FPS = 1000 / dt;\r\n        return dt;\r\n    }\r\n}\r\nexports.FPSCounter = FPSCounter;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/fpsCounter.ts?");

/***/ }),

/***/ "./src/main/core/globalVariables.ts":
/*!******************************************!*\
  !*** ./src/main/core/globalVariables.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GlobalVariables = void 0;\r\nclass GlobalVariables {\r\n}\r\nexports.GlobalVariables = GlobalVariables;\r\nGlobalVariables.time = 0;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/globalVariables.ts?");

/***/ }),

/***/ "./src/main/core/logger.ts":
/*!*********************************!*\
  !*** ./src/main/core/logger.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Logger = void 0;\r\nclass Logger {\r\n    constructor(name, symbol) {\r\n        this.renderName = true;\r\n        this.renderSymbol = true;\r\n        this.name = name;\r\n        this.symbol = symbol;\r\n    }\r\n    log(...messages) {\r\n        const texts = new Array();\r\n        const objects = new Array();\r\n        for (const msg of messages) {\r\n            if (typeof msg === \"string\")\r\n                texts.push(msg);\r\n            else\r\n                objects.push(msg);\r\n        }\r\n        console.log(this.getFixed(...texts), ...objects);\r\n    }\r\n    warn(...messages) {\r\n        const texts = new Array();\r\n        const objects = new Array();\r\n        for (const msg of messages) {\r\n            if (typeof msg === \"string\")\r\n                texts.push(msg);\r\n            else\r\n                objects.push(msg);\r\n        }\r\n        console.warn(this.getFixed(...texts), ...objects);\r\n    }\r\n    error(...messages) {\r\n        const texts = new Array();\r\n        const objects = new Array();\r\n        for (const msg of messages) {\r\n            if (typeof msg === \"string\")\r\n                texts.push(msg);\r\n            else\r\n                objects.push(msg);\r\n        }\r\n        console.error(this.getFixed(...texts), ...objects);\r\n    }\r\n    throw(...messages) {\r\n        throw this.getFixed(...messages);\r\n    }\r\n    toggleName() {\r\n        this.renderName = !this.renderName;\r\n    }\r\n    toggleSymbol() {\r\n        this.renderSymbol = !this.renderSymbol;\r\n    }\r\n    getFixed(...msg) {\r\n        if (this.renderSymbol && this.symbol) {\r\n            if (this.renderName)\r\n                return `${this.symbol} [${this.name}] ${msg} ${this.symbol}`;\r\n            return `${this.symbol} ${msg} ${this.symbol}`;\r\n        }\r\n        if (this.renderName)\r\n            return `[${this.name}] ${msg}`;\r\n        return `${msg}`;\r\n    }\r\n}\r\nexports.Logger = Logger;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/logger.ts?");

/***/ }),

/***/ "./src/main/core/mouse.ts":
/*!********************************!*\
  !*** ./src/main/core/mouse.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Mouse = exports.ButtonType = void 0;\r\nconst signal_1 = __webpack_require__(/*! ./signal */ \"./src/main/core/signal.ts\");\r\nvar ButtonType;\r\n(function (ButtonType) {\r\n    ButtonType[ButtonType[\"LEFT\"] = 0] = \"LEFT\";\r\n    ButtonType[ButtonType[\"MIDDLE\"] = 1] = \"MIDDLE\";\r\n    ButtonType[ButtonType[\"RIGHT\"] = 2] = \"RIGHT\";\r\n})(ButtonType = exports.ButtonType || (exports.ButtonType = {}));\r\nclass Mouse {\r\n    constructor() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.onMouseButtonDown = new signal_1.Signal();\r\n        this.onMouseButtonUp = new signal_1.Signal();\r\n        this.onMouseDrag = new signal_1.Signal();\r\n        this.onWheelScroll = new signal_1.Signal();\r\n        this.isDragging = false;\r\n    }\r\n    initialize() {\r\n        const element = document.body;\r\n        element.addEventListener(\"mousemove\", e => {\r\n            const dx = e.clientX - this.x;\r\n            const dy = e.clientY - this.y;\r\n            this.x += dx;\r\n            this.y += dy;\r\n            if (this.isDragging)\r\n                this.onMouseDrag.dispatch(this.draggingButton, dx, dy);\r\n        });\r\n        element.addEventListener(\"mousedown\", e => {\r\n            this.onMouseButtonDown.dispatch(e.button);\r\n            this.isDragging = true;\r\n            this.draggingButton = e.button;\r\n        });\r\n        element.addEventListener(\"mouseup\", e => {\r\n            this.onMouseButtonUp.dispatch(e.button);\r\n            this.isDragging = false;\r\n        });\r\n        element.addEventListener(\"wheel\", e => {\r\n            this.onWheelScroll.dispatch(e.deltaY);\r\n        });\r\n    }\r\n}\r\nexports.Mouse = Mouse;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/mouse.ts?");

/***/ }),

/***/ "./src/main/core/signal.ts":
/*!*********************************!*\
  !*** ./src/main/core/signal.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Signal = void 0;\r\nclass Signal {\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n    add(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    dispatch(...args) {\r\n        for (const listener of this.listeners) {\r\n            listener(...args);\r\n        }\r\n    }\r\n}\r\nexports.Signal = Signal;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/signal.ts?");

/***/ }),

/***/ "./src/main/core/types.ts":
/*!********************************!*\
  !*** ./src/main/core/types.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Float = exports.Integer = void 0;\r\nclass Integer extends Number {\r\n    constructor(value) {\r\n        super(Math.floor(value));\r\n    }\r\n}\r\nexports.Integer = Integer;\r\nclass Float extends Number {\r\n}\r\nexports.Float = Float;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/types.ts?");

/***/ }),

/***/ "./src/main/core/utils.ts":
/*!********************************!*\
  !*** ./src/main/core/utils.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.createHTML = exports.fixEveryPreload = exports.getElementByQuery = exports.getElementsByQuery = exports.getElementsByClass = exports.getElementById = exports.toggleClass = exports.swapElements = exports.createCanvas = exports.createButton = exports.createDiv = exports.createElement = exports.checkFor = void 0;\r\nfunction checkFor(check, message, error = \"\") {\r\n    if (check === null || check === undefined) {\r\n        throw new Error(message + \"\\n\" + error);\r\n    }\r\n}\r\nexports.checkFor = checkFor;\r\nfunction createElement(tagName, data, ...children) {\r\n    const element = document.createElement(tagName);\r\n    if (data !== undefined) {\r\n        if (data.parent !== undefined) {\r\n            data.parent.appendChild(element);\r\n            delete data.parent;\r\n        }\r\n        if (data.classes !== undefined && data.classes.length > 0) {\r\n            element.classList.add(...data.classes);\r\n            delete data.classes;\r\n        }\r\n        Object.assign(element, data);\r\n    }\r\n    element.append(...children);\r\n    return element;\r\n}\r\nexports.createElement = createElement;\r\nfunction createDiv(data, ...args) {\r\n    return createElement(\"div\", data, ...args);\r\n}\r\nexports.createDiv = createDiv;\r\nfunction createButton(data, ...args) {\r\n    return createElement(\"button\", data, ...args);\r\n}\r\nexports.createButton = createButton;\r\nfunction createCanvas(data, ...args) {\r\n    return createElement(\"canvas\", data, ...args);\r\n}\r\nexports.createCanvas = createCanvas;\r\nfunction swapElements(parent, oldElement, newElement) {\r\n    parent.insertBefore(newElement, oldElement);\r\n    parent.removeChild(oldElement);\r\n}\r\nexports.swapElements = swapElements;\r\nfunction toggleClass(element, className) {\r\n    if (!element.classList.contains(className))\r\n        element.classList.add(className);\r\n    else\r\n        element.classList.remove(className);\r\n}\r\nexports.toggleClass = toggleClass;\r\nfunction getElementById(id) {\r\n    const element = document.getElementById(id);\r\n    checkFor(element, `Element with id \"${id}\" not found.`);\r\n    return element;\r\n}\r\nexports.getElementById = getElementById;\r\nfunction getElementsByClass(className) {\r\n    return [...document.getElementsByClassName(className)];\r\n}\r\nexports.getElementsByClass = getElementsByClass;\r\nfunction getElementsByQuery(query) {\r\n    return [...document.querySelectorAll(query)];\r\n}\r\nexports.getElementsByQuery = getElementsByQuery;\r\nfunction getElementByQuery(query) {\r\n    return document.querySelector(query);\r\n}\r\nexports.getElementByQuery = getElementByQuery;\r\nfunction fixEveryPreload() {\r\n    setTimeout(() => {\r\n        const preloads = [...document.getElementsByClassName(\"preload\")];\r\n        for (const element of preloads) {\r\n            element.classList.remove(\"preload\");\r\n        }\r\n    }, 500);\r\n}\r\nexports.fixEveryPreload = fixEveryPreload;\r\n// Totally stolen from GPT-4.0\r\nfunction createHTML(html) {\r\n    const parser = new DOMParser();\r\n    // Parse the HTML string into a document\r\n    const doc = parser.parseFromString(html, \"text/html\");\r\n    // Get the body content of the parsed document\r\n    const bodyContent = doc.body;\r\n    // Append each child element of the parsed body to the actual document body\r\n    while (bodyContent.firstChild) {\r\n        document.body.appendChild(bodyContent.firstChild);\r\n    }\r\n}\r\nexports.createHTML = createHTML;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/utils.ts?");

/***/ }),

/***/ "./src/main/core/vector2D.ts":
/*!***********************************!*\
  !*** ./src/main/core/vector2D.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VectorI2D = exports.Vector2D = void 0;\r\nclass Vector2D {\r\n    constructor(x, y) {\r\n        this.x = this.cast(x);\r\n        this.y = this.cast(y);\r\n    }\r\n    add(v) {\r\n        return new Vector2D(this.x + v.x, this.y + v.y);\r\n    }\r\n    sub(v) {\r\n        return new Vector2D(this.x - v.x, this.y - v.y);\r\n    }\r\n    mul(v) {\r\n        return new Vector2D(this.x * v.x, this.y * v.y);\r\n    }\r\n    mulScalar(n) {\r\n        return new Vector2D(this.x * n, this.y * n);\r\n    }\r\n    div(v) {\r\n        return new Vector2D(this.x / v.x, this.y / v.y);\r\n    }\r\n    mag() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    cast(n) {\r\n        return n;\r\n    }\r\n    toString() {\r\n        return `(${this.x}, ${this.y})`;\r\n    }\r\n}\r\nexports.Vector2D = Vector2D;\r\nclass VectorI2D extends Vector2D {\r\n    cast(n) {\r\n        return Math.floor(n);\r\n    }\r\n}\r\nexports.VectorI2D = VectorI2D;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/vector2D.ts?");

/***/ }),

/***/ "./src/main/core/vector3D.ts":
/*!***********************************!*\
  !*** ./src/main/core/vector3D.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Color = exports.VectorI3D = exports.Vector3D = void 0;\r\nclass Vector3D {\r\n    constructor(x, y, z) {\r\n        this.x = this.cast(x);\r\n        this.y = this.cast(y);\r\n        this.z = this.cast(z);\r\n    }\r\n    mag() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n    add(v) {\r\n        return new Vector3D(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n    sub(v) {\r\n        return new Vector3D(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n    mul(v) {\r\n        return new Vector3D(this.x * v.x, this.y * v.y, this.z * v.z);\r\n    }\r\n    mulScalar(n) {\r\n        return new Vector3D(this.x * n, this.y * n, this.z * n);\r\n    }\r\n    div(v) {\r\n        return new Vector3D(this.x / v.x, this.y / v.y, this.z / v.z);\r\n    }\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y + this.z * v.z;\r\n    }\r\n    cross(vector) {\r\n        const x = this.y * vector.z - this.z * vector.y;\r\n        const y = this.z * vector.x - this.x * vector.z;\r\n        const z = this.x * vector.y - this.y * vector.x;\r\n        return new Vector3D(x, y, z);\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.dot(this));\r\n    }\r\n    cast(n) {\r\n        return n;\r\n    }\r\n    toString() {\r\n        return `(${this.x}, ${this.y}, ${this.z})`;\r\n    }\r\n}\r\nexports.Vector3D = Vector3D;\r\nclass VectorI3D extends Vector3D {\r\n    cast(n) {\r\n        return Math.floor(n);\r\n    }\r\n}\r\nexports.VectorI3D = VectorI3D;\r\nclass Color extends Vector3D {\r\n    constructor(r, g, b) {\r\n        super(r, g, b);\r\n    }\r\n    get r() {\r\n        return this.x;\r\n    }\r\n    get g() {\r\n        return this.y;\r\n    }\r\n    get b() {\r\n        return this.z;\r\n    }\r\n    set r(value) {\r\n        this.x = value;\r\n    }\r\n    set g(value) {\r\n        this.y = value;\r\n    }\r\n    set b(value) {\r\n        this.z = value;\r\n    }\r\n}\r\nexports.Color = Color;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/vector3D.ts?");

/***/ }),

/***/ "./src/main/core/webgl/baseShader.ts":
/*!*******************************************!*\
  !*** ./src/main/core/webgl/baseShader.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BaseShader = void 0;\r\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./src/main/core/utils.ts\");\r\nconst uniformManager_1 = __webpack_require__(/*! ./uniformManager */ \"./src/main/core/webgl/uniformManager.ts\");\r\nconst globalVariables_1 = __webpack_require__(/*! ../globalVariables */ \"./src/main/core/globalVariables.ts\");\r\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./src/main/core/logger.ts\");\r\nclass BaseShader {\r\n    constructor(shaderName, vertexData, fragmentData) {\r\n        this.programEnabled = false;\r\n        this.uniformQueue = new Array();\r\n        this.logger = new logger_1.Logger(shaderName, \"💡\");\r\n        this.shaderName = shaderName;\r\n        this.vertexData = vertexData;\r\n        this.fragmentData = fragmentData;\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        const shaderProgram = ctx.createProgram();\r\n        (0, utils_1.checkFor)(shaderProgram, `${shaderName} program unable to initialize!`, ctx.getProgramInfoLog(shaderProgram));\r\n        this.program = shaderProgram;\r\n        this.initialize();\r\n    }\r\n    initialize() {\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        this.vertexShader = this.createShader(ctx, ctx.VERTEX_SHADER, this.vertexData);\r\n        this.fragmentShader = this.createShader(ctx, ctx.FRAGMENT_SHADER, this.fragmentData);\r\n        ctx.attachShader(this.program, this.vertexShader);\r\n        ctx.attachShader(this.program, this.fragmentShader);\r\n        ctx.linkProgram(this.program);\r\n        if (!ctx.getProgramParameter(this.program, ctx.LINK_STATUS)) {\r\n            alert(\"Unable to initialize the shader program: \" + ctx.getProgramInfoLog(this.program));\r\n            return;\r\n        }\r\n        this.uniformLoader = new uniformManager_1.UniformManager(this.program);\r\n        this.logger.log(`Shader \"${this.shaderName}\" has loaded!`);\r\n    }\r\n    beginShader() {\r\n        globalVariables_1.GlobalVariables.ctx.useProgram(this.program);\r\n        this.programEnabled = true;\r\n        this.handleUniformQueue();\r\n    }\r\n    stopShader() {\r\n        globalVariables_1.GlobalVariables.ctx.useProgram(null);\r\n        this.programEnabled = false;\r\n    }\r\n    loadUniform(name, data) {\r\n        if (this.programEnabled) {\r\n            this.uniformLoader.loadData(name, data);\r\n            return;\r\n        }\r\n        const alreadyQueued = this.uniformQueue.findIndex(a => a.name === name);\r\n        if (alreadyQueued >= 0) {\r\n            this.uniformQueue[alreadyQueued].data = data;\r\n            return;\r\n        }\r\n        const request = { name, data };\r\n        // this.logger.log(\"Shader has received uniform request!\", request);\r\n        this.uniformQueue.push(request);\r\n    }\r\n    handleUniformQueue() {\r\n        if (!this.programEnabled)\r\n            return;\r\n        while (this.uniformQueue.length > 0) {\r\n            const request = this.uniformQueue.shift();\r\n            if (!request)\r\n                continue;\r\n            this.uniformLoader.loadData(request.name, request.data);\r\n        }\r\n    }\r\n    createShader(gl, type, data) {\r\n        const shader = gl.createShader(type);\r\n        (0, utils_1.checkFor)(shader, \"Unable to create simulation\");\r\n        gl.shaderSource(shader, data);\r\n        gl.compileShader(shader);\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            const info = gl.getShaderInfoLog(shader);\r\n            gl.deleteShader(shader);\r\n            this.logger.throw(info !== null && info !== void 0 ? info : \"Failed to load shader\");\r\n        }\r\n        return shader;\r\n    }\r\n}\r\nexports.BaseShader = BaseShader;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/webgl/baseShader.ts?");

/***/ }),

/***/ "./src/main/core/webgl/shaderUniform.ts":
/*!**********************************************!*\
  !*** ./src/main/core/webgl/shaderUniform.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ShaderUniform = void 0;\r\nconst vector2D_1 = __webpack_require__(/*! ../vector2D */ \"./src/main/core/vector2D.ts\");\r\nconst vector3D_1 = __webpack_require__(/*! ../vector3D */ \"./src/main/core/vector3D.ts\");\r\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./src/main/core/logger.ts\");\r\nconst uniformRegistry_1 = __webpack_require__(/*! ./uniformRegistry */ \"./src/main/core/webgl/uniformRegistry.ts\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./src/main/core/types.ts\");\r\nconst logger = new logger_1.Logger(\"ShaderUniform\", \"💅\");\r\nclass ShaderUniform {\r\n    constructor(preInit, location) {\r\n        this.range = [];\r\n        this.step = [];\r\n        this.name = preInit.name;\r\n        this.location = location;\r\n        this.resolveType(preInit.type);\r\n        this.resolveOptions(preInit.options);\r\n    }\r\n    setUpdateResponse(response) {\r\n        this.updateResponse = response;\r\n        if (this.attachedData && this.attachedData.holder === this) {\r\n            // @ts-ignore\r\n            this.updateResponse(this.name, this.fixType(this[this.name]));\r\n        }\r\n    }\r\n    attachVariable(holder, variable, data = undefined) {\r\n        data !== null && data !== void 0 ? data : (data = holder[variable]);\r\n        if (data === undefined) {\r\n            logger.throw(`Variable \"${String(variable)}\" not found in \"${holder}\"`);\r\n        }\r\n        const typeSize = this.typeSize;\r\n        if (typeSize > 1) {\r\n            // @ts-ignore\r\n            holder[variable] = new Proxy(data, {\r\n                set: (target, prop, value) => {\r\n                    this.updateResponse(this.name, this.fixType(target));\r\n                    return Reflect.set(target, prop, value);\r\n                }\r\n            });\r\n            data = holder[variable];\r\n        }\r\n        // @ts-ignore\r\n        holder[`uniform_${variable}`] = data;\r\n        Object.defineProperty(holder, variable, {\r\n            // @ts-ignore\r\n            get: () => { var _a; return (_a = holder[`uniform_${variable}`]) === null || _a === void 0 ? void 0 : _a.valueOf(); },\r\n            set: (value) => {\r\n                // @ts-ignore\r\n                holder[`uniform_${variable}`] = value;\r\n                this.updateResponse(this.name, this.fixType(value));\r\n            }\r\n        });\r\n        this.attachedData = { holder, variable };\r\n        if (this.updateResponse)\r\n            this.updateResponse(this.name, this.fixType(data));\r\n    }\r\n    loadData(newData) {\r\n        uniformRegistry_1.UniformRegistry.load(this.location, newData);\r\n    }\r\n    fixType(data) {\r\n        if (typeof data !== \"number\")\r\n            return data;\r\n        if (this.type === types_1.Integer)\r\n            return new types_1.Integer(data);\r\n        return new types_1.Float(data);\r\n    }\r\n    resolveOptions(options) {\r\n        var _a;\r\n        if (!options)\r\n            return;\r\n        const colorMatch = options.match(ShaderUniform.COLOR_REGEX);\r\n        const sliderMatch = options.match(ShaderUniform.SLIDER_REGEX);\r\n        if (sliderMatch) {\r\n            const range = sliderMatch[0];\r\n            const stripped = range.replace(/[[\\]]/g, \"\");\r\n            const allOptions = stripped.split(\":\").map(a => a.replace(/[()]/g, \"\"));\r\n            if (allOptions.length < 2)\r\n                return;\r\n            const minVals = allOptions[0].split(\",\").map(Number);\r\n            const maxVals = allOptions[1].split(\",\").map(Number);\r\n            const minimums = [0, 0, 0].map((_, i) => Math.min(minVals[i], maxVals[i]));\r\n            const maximums = [0, 0, 0].map((_, i) => Math.max(minVals[i], maxVals[i]));\r\n            this.range.push(new this.type(...minimums), new this.type(...maximums));\r\n            const stepVals = (_a = allOptions[2]) === null || _a === void 0 ? void 0 : _a.split(\",\").map(Number);\r\n            this.step.push(...stepVals !== null && stepVals !== void 0 ? stepVals : []);\r\n        }\r\n        else if (this.type === vector3D_1.Vector3D && colorMatch) {\r\n            this.type = vector3D_1.Color;\r\n        }\r\n        const initialMatch = options.match(ShaderUniform.INITIAL_REGEX);\r\n        if (initialMatch) {\r\n            const value = initialMatch[1].split(\",\").map(Number);\r\n            // @ts-ignore\r\n            this.attachVariable(this, this.name, new this.type(...value));\r\n            // this.attachedData[this.name] = new this.type(...value);\r\n        }\r\n    }\r\n    resolveType(type) {\r\n        const typeObj = ShaderUniform.typeMap.get(type);\r\n        if (!typeObj) {\r\n            logger.error(`Invalid/Unregistered type: ${type}`);\r\n            return;\r\n        }\r\n        this.type = typeObj;\r\n        const typeSize = ShaderUniform.typeSizeMap.get(typeObj);\r\n        this.typeSize = typeSize !== null && typeSize !== void 0 ? typeSize : 1;\r\n    }\r\n}\r\nexports.ShaderUniform = ShaderUniform;\r\nShaderUniform.INITIAL_REGEX = /<(.*)>/;\r\nShaderUniform.COLOR_REGEX = /RGB\\s+<(\\d+(\\.\\d+)?,\\s*\\d+(\\.\\d+)?,\\s*\\d+(\\.\\d+)?)>/;\r\nShaderUniform.SLIDER_REGEX = /\\[.*]/;\r\nShaderUniform.typeMap = new Map();\r\nShaderUniform.typeSizeMap = new Map();\r\n(() => {\r\n    ShaderUniform.typeMap.set(\"int\", types_1.Integer);\r\n    ShaderUniform.typeMap.set(\"float\", types_1.Float);\r\n    ShaderUniform.typeMap.set(\"vec2\", vector2D_1.Vector2D);\r\n    ShaderUniform.typeMap.set(\"ivec2\", vector2D_1.VectorI2D);\r\n    ShaderUniform.typeMap.set(\"vec3\", vector3D_1.Vector3D);\r\n    ShaderUniform.typeMap.set(\"ivec3\", vector3D_1.VectorI3D);\r\n    ShaderUniform.typeSizeMap.set(vector2D_1.Vector2D, 2);\r\n    ShaderUniform.typeSizeMap.set(vector2D_1.VectorI2D, 2);\r\n    ShaderUniform.typeSizeMap.set(vector3D_1.Vector3D, 3);\r\n    ShaderUniform.typeSizeMap.set(vector3D_1.VectorI3D, 3);\r\n    ShaderUniform.typeSizeMap.set(vector3D_1.Color, 3);\r\n})();\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/webgl/shaderUniform.ts?");

/***/ }),

/***/ "./src/main/core/webgl/uniformBuffer.ts":
/*!**********************************************!*\
  !*** ./src/main/core/webgl/uniformBuffer.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UniformBuffer = void 0;\r\nconst globalVariables_1 = __webpack_require__(/*! ../globalVariables */ \"./src/main/core/globalVariables.ts\");\r\nclass UniformBuffer {\r\n    constructor(program, name, data, boundLocation) {\r\n        this.program = program;\r\n        this.name = name;\r\n        this.boundLocation = boundLocation;\r\n        this.data = data;\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        this.buffer = ctx.createBuffer();\r\n        ctx.bindBuffer(ctx.UNIFORM_BUFFER, this.buffer);\r\n        // ctx.bufferData(ctx.UNIFORM_BUFFER, this.data.length, ctx.STATIC_DRAW);\r\n        // ctx.bindBufferRange(ctx.UNIFORM_BUFFER, this.boundLocation, this.buffer, 0, this.data.length);\r\n        ctx.bufferData(ctx.UNIFORM_BUFFER, this.data, ctx.DYNAMIC_DRAW);\r\n        ctx.bindBuffer(ctx.UNIFORM_BUFFER, null);\r\n        ctx.bindBufferBase(ctx.UNIFORM_BUFFER, this.boundLocation, this.buffer);\r\n    }\r\n    update(data, offset = 0) {\r\n        this.data.set(data, offset);\r\n        console.log(this.data);\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        ctx.bindBuffer(ctx.UNIFORM_BUFFER, this.buffer);\r\n        ctx.bufferSubData(ctx.UNIFORM_BUFFER, 0, this.data, 0, this.data.length);\r\n        ctx.bindBuffer(ctx.UNIFORM_BUFFER, null);\r\n        ctx.bindBufferBase(ctx.UNIFORM_BUFFER, this.boundLocation, this.buffer);\r\n    }\r\n    bind() {\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        ctx.uniformBlockBinding(this.program, ctx.getUniformBlockIndex(this.program, this.name), this.boundLocation);\r\n    }\r\n}\r\nexports.UniformBuffer = UniformBuffer;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/webgl/uniformBuffer.ts?");

/***/ }),

/***/ "./src/main/core/webgl/uniformManager.ts":
/*!***********************************************!*\
  !*** ./src/main/core/webgl/uniformManager.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UniformManager = void 0;\r\nconst globalVariables_1 = __webpack_require__(/*! ../globalVariables */ \"./src/main/core/globalVariables.ts\");\r\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./src/main/core/logger.ts\");\r\nconst shaderUniform_1 = __webpack_require__(/*! ./shaderUniform */ \"./src/main/core/webgl/shaderUniform.ts\");\r\nconst uniformRegistry_1 = __webpack_require__(/*! ./uniformRegistry */ \"./src/main/core/webgl/uniformRegistry.ts\");\r\nconst logger = new logger_1.Logger(\"Uniform Loader\");\r\nclass UniformManager {\r\n    constructor(program) {\r\n        this.nonExistenceNames = new Set();\r\n        this.nameToVariable = new Map();\r\n        this.program = program;\r\n    }\r\n    registerUniform(preInit) {\r\n        const name = preInit.name;\r\n        const location = globalVariables_1.GlobalVariables.ctx.getUniformLocation(this.program, name);\r\n        if (!location) {\r\n            this.nonExistenceNames.add(name);\r\n            logger.warn(`Uniform variable \"${name}\" is not used!`);\r\n            return null;\r\n        }\r\n        const variable = new shaderUniform_1.ShaderUniform(preInit, location);\r\n        this.nameToVariable.set(name, variable);\r\n        return variable;\r\n    }\r\n    loadData(name, data) {\r\n        if (this.nonExistenceNames.has(name))\r\n            return;\r\n        const location = globalVariables_1.GlobalVariables.ctx.getUniformLocation(this.program, name);\r\n        if (!location) {\r\n            this.nonExistenceNames.add(name);\r\n            logger.warn(`Uniform variable \"${name}\" is not used!`);\r\n            return;\r\n        }\r\n        uniformRegistry_1.UniformRegistry.load(location, data);\r\n    }\r\n    attachVariable(name, holder, variable) {\r\n        const uniform = this.getUniform(name);\r\n        if (!uniform)\r\n            return;\r\n        uniform.attachVariable(holder, variable);\r\n    }\r\n    getUniform(name) {\r\n        if (this.nonExistenceNames.has(name))\r\n            return;\r\n        const uniform = this.nameToVariable.get(name);\r\n        if (!uniform) {\r\n            logger.warn(`Uniform variable \"${name}\" does not exist!`);\r\n            this.nonExistenceNames.add(name);\r\n        }\r\n        return uniform;\r\n    }\r\n}\r\nexports.UniformManager = UniformManager;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/webgl/uniformManager.ts?");

/***/ }),

/***/ "./src/main/core/webgl/uniformRegistry.ts":
/*!************************************************!*\
  !*** ./src/main/core/webgl/uniformRegistry.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\n/* eslint-disable */\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UniformRegistry = void 0;\r\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./src/main/core/utils.ts\");\r\nconst types_1 = __webpack_require__(/*! ../types */ \"./src/main/core/types.ts\");\r\nconst vector2D_1 = __webpack_require__(/*! ../vector2D */ \"./src/main/core/vector2D.ts\");\r\nconst globalVariables_1 = __webpack_require__(/*! ../globalVariables */ \"./src/main/core/globalVariables.ts\");\r\nconst vector3D_1 = __webpack_require__(/*! ../vector3D */ \"./src/main/core/vector3D.ts\");\r\nclass UniformRegistry {\r\n    static initialize() {\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        this.loadMethods.set(Number, (loc, v) => ctx.uniform1f(loc, v));\r\n        this.loadMethods.set(types_1.Float, (loc, v) => ctx.uniform1f(loc, v.valueOf()));\r\n        this.loadMethods.set(types_1.Integer, (loc, v) => ctx.uniform1i(loc, v.valueOf()));\r\n        this.loadMethods.set(vector2D_1.VectorI2D, (loc, v) => ctx.uniform2i(loc, v.x, v.y));\r\n        this.loadMethods.set(vector2D_1.Vector2D, (loc, v) => ctx.uniform2f(loc, v.x, v.y));\r\n        this.loadMethods.set(vector3D_1.VectorI3D, (loc, v) => ctx.uniform3i(loc, v.x, v.y, v.z));\r\n        this.loadMethods.set(vector3D_1.Vector3D, (loc, v) => ctx.uniform3f(loc, v.x, v.y, v.z));\r\n        this.loadMethods.set(vector3D_1.Color, (loc, v) => ctx.uniform3f(loc, v.r, v.g, v.b));\r\n    }\r\n    static load(loc, val) {\r\n        // @ts-ignore\r\n        const func = this.loadMethods.get(val.constructor);\r\n        // @ts-ignore\r\n        (0, utils_1.checkFor)(func, `Load method for ${val.constructor.name} is not supported`);\r\n        func(loc, val);\r\n    }\r\n}\r\nexports.UniformRegistry = UniformRegistry;\r\nUniformRegistry.loadMethods = new Map();\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/core/webgl/uniformRegistry.ts?");

/***/ }),

/***/ "./src/main/main.ts":
/*!**************************!*\
  !*** ./src/main/main.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Main = void 0;\r\nconst canvas_1 = __webpack_require__(/*! ./core/canvas */ \"./src/main/core/canvas.ts\");\r\nconst fpsCounter_1 = __webpack_require__(/*! ./core/fpsCounter */ \"./src/main/core/fpsCounter.ts\");\r\nconst globalVariables_1 = __webpack_require__(/*! ./core/globalVariables */ \"./src/main/core/globalVariables.ts\");\r\nconst utils_1 = __webpack_require__(/*! ./core/utils */ \"./src/main/core/utils.ts\");\r\nconst vector2D_1 = __webpack_require__(/*! ./core/vector2D */ \"./src/main/core/vector2D.ts\");\r\nconst uniformRegistry_1 = __webpack_require__(/*! ./core/webgl/uniformRegistry */ \"./src/main/core/webgl/uniformRegistry.ts\");\r\nconst mainRenderer_1 = __webpack_require__(/*! ./simulation/renderer/mainRenderer */ \"./src/main/simulation/renderer/mainRenderer.ts\");\r\nconst BrowserSupport_1 = __webpack_require__(/*! ./simulation/ui/BrowserSupport */ \"./src/main/simulation/ui/BrowserSupport.ts\");\r\n__webpack_require__(/*! ../assets/style/style.scss */ \"./src/assets/style/style.scss\");\r\nconst UserInterface_1 = __webpack_require__(/*! ./simulation/ui/UserInterface */ \"./src/main/simulation/ui/UserInterface.ts\");\r\nconst ErrorScreen_1 = __webpack_require__(/*! ./simulation/ui/ErrorScreen */ \"./src/main/simulation/ui/ErrorScreen.ts\");\r\nclass Main {\r\n    constructor() {\r\n        this.browserSupport = new BrowserSupport_1.BrowserSupport();\r\n        this.userInterface = new UserInterface_1.UserInterface();\r\n        this.fpsCounter = new fpsCounter_1.FPSCounter();\r\n    }\r\n    initialize() {\r\n        globalVariables_1.GlobalVariables.resolution = new vector2D_1.VectorI2D(0, 0);\r\n        globalVariables_1.GlobalVariables.canvas = new canvas_1.Canvas();\r\n        globalVariables_1.GlobalVariables.canvas.initialize();\r\n        globalVariables_1.GlobalVariables.ctx = globalVariables_1.GlobalVariables.canvas.getWebGLContext();\r\n        this.userInterface.initialize();\r\n        this.mainRenderer = new mainRenderer_1.MainRenderer();\r\n        uniformRegistry_1.UniformRegistry.initialize();\r\n        this.mainRenderer.initialize();\r\n        this.preload();\r\n        this.startRunning();\r\n    }\r\n    preload() {\r\n        (0, utils_1.fixEveryPreload)();\r\n        ErrorScreen_1.ErrorScreen.setInactive();\r\n    }\r\n    startRunning() {\r\n        const dt = this.fpsCounter.start();\r\n        globalVariables_1.GlobalVariables.time += dt / 1000;\r\n        this.userInterface.update();\r\n        this.mainRenderer.frameUpdate();\r\n        // TODO: This should happen when update happens, not every frame!!!\r\n        this.userInterface.updateFrame();\r\n        requestAnimationFrame(() => this.startRunning());\r\n    }\r\n    bigEnoughScreen() {\r\n        const screenWidth = window.innerWidth;\r\n        console.log(screenWidth);\r\n        return screenWidth > 600;\r\n    }\r\n}\r\nexports.Main = Main;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/main.ts?");

/***/ }),

/***/ "./src/main/simulation/renderer/mainRenderer.ts":
/*!******************************************************!*\
  !*** ./src/main/simulation/renderer/mainRenderer.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MainRenderer = void 0;\r\nconst mainShader_1 = __webpack_require__(/*! ./mainShader */ \"./src/main/simulation/renderer/mainShader.ts\");\r\nconst globalVariables_1 = __webpack_require__(/*! ../../core/globalVariables */ \"./src/main/core/globalVariables.ts\");\r\nconst uniformBuffer_1 = __webpack_require__(/*! ../../core/webgl/uniformBuffer */ \"./src/main/core/webgl/uniformBuffer.ts\");\r\nconst types_1 = __webpack_require__(/*! ../../core/types */ \"./src/main/core/types.ts\");\r\nclass MainRenderer {\r\n    constructor() {\r\n        this.vertices = new Float32Array([\r\n            -1.0, -1.0, 0.0,\r\n            1.0, -1.0, 0.0,\r\n            -1.0, 1.0, 0.0,\r\n            1.0, 1.0, 0.0 // top right\r\n        ]);\r\n        this.mainShader = new mainShader_1.MainShader();\r\n    }\r\n    initialize() {\r\n        const canvas = globalVariables_1.GlobalVariables.canvas;\r\n        canvas.onResize.add(this.mainShader.loadResolution.bind(this.mainShader));\r\n        this.mainShader.loadResolution(canvas.WIDTH, canvas.HEIGHT);\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        canvas.onResize.add((width, height) => {\r\n            ctx.viewport(0, 0, width, height);\r\n        });\r\n        this.uniformBuffer = new uniformBuffer_1.UniformBuffer(this.mainShader.program, \"Circles\", new Float32Array(32 * 4), 0);\r\n        this.updateUniformBuffer([1, 1, 0, 1], 0);\r\n    }\r\n    updateUniformBuffer(data, offset = 0) {\r\n        this.uniformBuffer.update(data, offset);\r\n        this.mainShader.loadUniform(\"size\", new types_1.Integer(data.length / 4));\r\n        this.mainShader.beginShader();\r\n        this.uniformBuffer.bind();\r\n        this.mainShader.stopShader();\r\n    }\r\n    frameUpdate() {\r\n        const ctx = globalVariables_1.GlobalVariables.ctx;\r\n        { // Clean Screen\r\n            ctx.clearColor(1.0, 0.0, 0.0, 1.0);\r\n            ctx.clear(ctx.COLOR_BUFFER_BIT);\r\n        }\r\n        { // Main Shader\r\n            this.mainShader.beginShader();\r\n            // Create a buffer and put the vertices in it\r\n            const vertexBuffer = ctx.createBuffer();\r\n            ctx.bindBuffer(ctx.ARRAY_BUFFER, vertexBuffer);\r\n            ctx.bufferData(ctx.ARRAY_BUFFER, this.vertices, ctx.STATIC_DRAW);\r\n            const positionLocation = ctx.getAttribLocation(this.mainShader.program, \"in_position\");\r\n            ctx.enableVertexAttribArray(positionLocation);\r\n            ctx.vertexAttribPointer(positionLocation, 3, ctx.FLOAT, false, 0, 0);\r\n            // Draw the square\r\n            ctx.clear(ctx.COLOR_BUFFER_BIT);\r\n            ctx.drawArrays(ctx.TRIANGLE_STRIP, 0, 4);\r\n            this.mainShader.stopShader();\r\n        }\r\n    }\r\n}\r\nexports.MainRenderer = MainRenderer;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/renderer/mainRenderer.ts?");

/***/ }),

/***/ "./src/main/simulation/renderer/mainShader.ts":
/*!****************************************************!*\
  !*** ./src/main/simulation/renderer/mainShader.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MainShader = void 0;\r\nconst baseShader_1 = __webpack_require__(/*! ../../core/webgl/baseShader */ \"./src/main/core/webgl/baseShader.ts\");\r\nconst vector2D_1 = __webpack_require__(/*! ../../core/vector2D */ \"./src/main/core/vector2D.ts\");\r\nclass MainShader extends baseShader_1.BaseShader {\r\n    constructor() {\r\n        super(\"main\", `#version 300 es\r\nprecision mediump float;\r\n\r\nin vec4 in_position;\r\n\r\nvoid main() {\r\n    gl_Position = in_position;\r\n}`, `#version 300 es\r\nprecision mediump float;\r\n\r\nstruct Circle {\r\n    vec4 data;\r\n};\r\n\r\nuniform int size;\r\nlayout(std140) uniform Circles {\r\n    Circle circles[32];\r\n};\r\n\r\nout vec4 out_color;\r\n\r\nvoid main() {\r\n    out_color = vec4(1.0, 0.0, 0.0, 1.0);\r\n    \r\n    if (size > 0) {\r\n        out_color = vec4(0.0, 1.0, 1.0, 1.0);\r\n        out_color.rgb = circles[0].data.xyz;\r\n    }\r\n}`);\r\n    }\r\n    loadResolution(width, height) {\r\n        this.loadUniform(\"resolution\", new vector2D_1.VectorI2D(width, height));\r\n    }\r\n}\r\nexports.MainShader = MainShader;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/renderer/mainShader.ts?");

/***/ }),

/***/ "./src/main/simulation/root.ts":
/*!*************************************!*\
  !*** ./src/main/simulation/root.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Root = void 0;\r\nconst AttachedMouse_1 = __webpack_require__(/*! ./utils/AttachedMouse */ \"./src/main/simulation/utils/AttachedMouse.ts\");\r\nconst NodeInterface_1 = __webpack_require__(/*! ./ui/nodes/NodeInterface */ \"./src/main/simulation/ui/nodes/NodeInterface.ts\");\r\nconst TemplateInterface_1 = __webpack_require__(/*! ./ui/templates/TemplateInterface */ \"./src/main/simulation/ui/templates/TemplateInterface.ts\");\r\nclass Root {\r\n    constructor() {\r\n        this.nodeInterface = new NodeInterface_1.NodeInterface();\r\n        this.templateInterface = new TemplateInterface_1.TemplateInterface();\r\n    }\r\n    initialize() {\r\n        this.windowMouse = AttachedMouse_1.AttachedMouse.getAttachment(document.body);\r\n        this.nodeInterface.initialize(this);\r\n        this.templateInterface.initialize(this);\r\n    }\r\n}\r\nexports.Root = Root;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/root.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/BrowserSupport.ts":
/*!**************************************************!*\
  !*** ./src/main/simulation/ui/BrowserSupport.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.BrowserSupport = exports.Browser = void 0;\r\nconst logger_1 = __webpack_require__(/*! ../../core/logger */ \"./src/main/core/logger.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../../core/utils */ \"./src/main/core/utils.ts\");\r\nvar Browser;\r\n(function (Browser) {\r\n    Browser[Browser[\"Chrome\"] = 0] = \"Chrome\";\r\n    Browser[Browser[\"Firefox\"] = 1] = \"Firefox\";\r\n    Browser[Browser[\"Safari\"] = 2] = \"Safari\";\r\n    Browser[Browser[\"Edge\"] = 3] = \"Edge\";\r\n    Browser[Browser[\"IE\"] = 4] = \"IE\";\r\n    Browser[Browser[\"Opera\"] = 5] = \"Opera\";\r\n    Browser[Browser[\"Unknown\"] = 6] = \"Unknown\";\r\n})(Browser = exports.Browser || (exports.Browser = {}));\r\nconst logger = new logger_1.Logger(\"Browser Support\", \"✔️\");\r\nclass BrowserSupport {\r\n    constructor() {\r\n        this.browser = this.detectBrowser();\r\n        logger.log(\"Browser: \" + Browser[this.browser]);\r\n        this.updateScrollbars();\r\n    }\r\n    updateScrollbars() {\r\n        if (this.browser !== Browser.Firefox)\r\n            return;\r\n        const selection = (0, utils_1.getElementsByClass)(\"scrollable\");\r\n        for (const element of selection) {\r\n            element.classList.remove(\"scrollable\");\r\n            element.classList.add(\"firefox-scrollbar\");\r\n        }\r\n    }\r\n    detectBrowser() {\r\n        const userAgent = navigator.userAgent;\r\n        if (/chrome|crios|crmo/i.test(userAgent)) {\r\n            return Browser.Chrome;\r\n        }\r\n        else if (/firefox|fxios/i.test(userAgent)) {\r\n            return Browser.Firefox;\r\n        }\r\n        else if (/safari/i.test(userAgent)) {\r\n            return Browser.Safari;\r\n        }\r\n        else if (/edg/i.test(userAgent)) {\r\n            return Browser.Edge;\r\n        }\r\n        else if (/trident/i.test(userAgent)) {\r\n            return Browser.IE;\r\n        }\r\n        else if (/opr\\//i.test(userAgent)) {\r\n            return Browser.Opera;\r\n        }\r\n        else {\r\n            return Browser.Unknown;\r\n        }\r\n    }\r\n}\r\nexports.BrowserSupport = BrowserSupport;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/BrowserSupport.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/ErrorScreen.ts":
/*!***********************************************!*\
  !*** ./src/main/simulation/ui/ErrorScreen.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ErrorScreen = void 0;\r\nconst utils_1 = __webpack_require__(/*! ../../core/utils */ \"./src/main/core/utils.ts\");\r\nconst logger_1 = __webpack_require__(/*! ../../core/logger */ \"./src/main/core/logger.ts\");\r\nconst logger = new logger_1.Logger(\"Error Screen\", \"❌\");\r\nclass ErrorScreen {\r\n    static setInactive() {\r\n        (0, utils_1.getElementById)(\"error-screen\").remove();\r\n    }\r\n    static setActive(msg = null) {\r\n        if (msg)\r\n            (0, utils_1.getElementByQuery)(\"#error-screen .error\").innerHTML = msg;\r\n        (0, utils_1.getElementById)(\"main-screen\").remove();\r\n        logger.toggleName();\r\n        logger.error(msg);\r\n    }\r\n}\r\nexports.ErrorScreen = ErrorScreen;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/ErrorScreen.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/UserInterface.ts":
/*!*************************************************!*\
  !*** ./src/main/simulation/ui/UserInterface.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UserInterface = void 0;\r\nconst root_1 = __webpack_require__(/*! ../root */ \"./src/main/simulation/root.ts\");\r\nclass UserInterface {\r\n    constructor() {\r\n        this.root = new root_1.Root();\r\n    }\r\n    initialize() {\r\n        this.root.initialize();\r\n    }\r\n    update() {\r\n        // this.root.nodeInterface.update();\r\n        // this.root.templateInterface.update();\r\n    }\r\n    updateFrame() {\r\n        this.root.templateInterface.updateFrame();\r\n    }\r\n}\r\nexports.UserInterface = UserInterface;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/UserInterface.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/connections/ConnectionManager.ts":
/*!*****************************************************************!*\
  !*** ./src/main/simulation/ui/connections/ConnectionManager.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ConnectionManager = void 0;\r\nconst VisualConnection_1 = __webpack_require__(/*! ./VisualConnection */ \"./src/main/simulation/ui/connections/VisualConnection.ts\");\r\nconst vector2D_1 = __webpack_require__(/*! ../../../core/vector2D */ \"./src/main/core/vector2D.ts\");\r\nclass ConnectionManager {\r\n    constructor() {\r\n        this.allConnections = [];\r\n        this.currentlyConnecting = false;\r\n        this.port = null;\r\n    }\r\n    initialize(root) {\r\n        this.root = root;\r\n    }\r\n    /**\r\n     * Either starts a connection or connects the currently selected port to the given port\r\n     * @param port\r\n     */\r\n    toggleConnection(port) {\r\n        this.currentlyConnecting ? this.connect(port) : this.start(port);\r\n    }\r\n    /**\r\n     * Starts the connection process\r\n     * @param port\r\n     * @private\r\n     */\r\n    start(port) {\r\n        this.currentlyConnecting = true;\r\n        this.port = port;\r\n    }\r\n    /**\r\n     * Connects the currently selected port to the given port\r\n     * @param port\r\n     * @private\r\n     */\r\n    connect(port) {\r\n        this.allConnections.push(new VisualConnection_1.VisualConnection(this.port, port));\r\n        this.currentlyConnecting = false;\r\n        this.port = null;\r\n    }\r\n    /**\r\n     * Renders all connections and the current connection\r\n     * @param ctx\r\n     */\r\n    render(ctx) {\r\n        this.allConnections.forEach(connection => connection.render(ctx));\r\n        if (!this.currentlyConnecting)\r\n            return;\r\n        const position = VisualConnection_1.VisualConnection.positionFromPort(this.port);\r\n        const mouse = this.root.windowMouse;\r\n        VisualConnection_1.VisualConnection.drawAtoB(ctx, position, new vector2D_1.Vector2D(mouse.x, mouse.y));\r\n    }\r\n}\r\nexports.ConnectionManager = ConnectionManager;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/connections/ConnectionManager.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/connections/VisualConnection.ts":
/*!****************************************************************!*\
  !*** ./src/main/simulation/ui/connections/VisualConnection.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.VisualConnection = void 0;\r\nconst vector2D_1 = __webpack_require__(/*! ../../../core/vector2D */ \"./src/main/core/vector2D.ts\");\r\nclass VisualConnection {\r\n    constructor(from, to) {\r\n        this.from = from;\r\n        this.to = to;\r\n    }\r\n    /**\r\n     * Renders the connection from A to B\r\n     * @param ctx\r\n     */\r\n    render(ctx) {\r\n        VisualConnection.drawAtoB(ctx, VisualConnection.positionFromPort(this.from), VisualConnection.positionFromPort(this.to));\r\n    }\r\n    /**\r\n     * Calculates the position of a port\r\n     * @param port\r\n     */\r\n    static positionFromPort(port) {\r\n        const box = port.body.getBoundingClientRect();\r\n        return new vector2D_1.Vector2D(box.left + box.width / 2, box.top + box.height / 2);\r\n    }\r\n    /**\r\n     * Draws a bezier curve from A to B\r\n     * @param ctx\r\n     * @param A\r\n     * @param B\r\n     */\r\n    static drawAtoB(ctx, A, B) {\r\n        const dist = A.sub(B).mag();\r\n        const totalTime = Math.round(dist / 15);\r\n        for (let i = 0; i <= totalTime; i++) {\r\n            const t = i / totalTime;\r\n            // Cubic Bezier\r\n            const x = A.x * Math.pow((1 - t), 3) + 3 * (A.x + B.x) / 2 * (1 - t) * t + B.x * Math.pow(t, 3);\r\n            const y = A.y * Math.pow((1 - t), 2) * (1 + 2 * t) + B.y * t * t * (3 - 2 * t);\r\n            ctx.strokeStyle = \"#999\";\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, 5, 0, 2 * Math.PI);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nexports.VisualConnection = VisualConnection;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/connections/VisualConnection.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/nodes/NodeCreator.ts":
/*!*****************************************************!*\
  !*** ./src/main/simulation/ui/nodes/NodeCreator.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NodeCreator = exports.PortType = exports.calculateFontColor = exports.PossibleColors = void 0;\r\nconst utils_1 = __webpack_require__(/*! ../../../core/utils */ \"./src/main/core/utils.ts\");\r\nconst TemplateNode_1 = __webpack_require__(/*! ./TemplateNode */ \"./src/main/simulation/ui/nodes/TemplateNode.ts\");\r\nexports.PossibleColors = [\r\n    \"#FF5733\",\r\n    \"#33FF57\",\r\n    \"#3357FF\",\r\n    \"#F1C40F\",\r\n    \"#9B59B6\",\r\n    \"#E74C3C\",\r\n    \"#1ABC9C\",\r\n    \"#2ECC71\",\r\n    \"#3498DB\",\r\n    \"#E67E22\",\r\n    \"#ECF0F1\",\r\n    \"#95A5A6\",\r\n    \"#34495E\",\r\n    \"#16A085\",\r\n    \"#27AE60\",\r\n    \"#2980B9\",\r\n    \"#8E44AD\",\r\n    \"#F39C12\",\r\n    \"#D35400\",\r\n    \"#C0392B\",\r\n    \"#BDC3C7\",\r\n    \"#7F8C8D\",\r\n    \"#FF69B4\",\r\n    \"#8B4513\",\r\n    \"#808000\",\r\n    \"#FFA07A\",\r\n    \"#800080\",\r\n    \"#BDB76B\",\r\n    \"#00CED1\",\r\n    \"#FFD700\",\r\n    \"#FF4500\",\r\n    \"#DA70D6\",\r\n    \"#ADFF2F\",\r\n    \"#FFE4C4\",\r\n    \"#4682B4\",\r\n    \"#D2691E\",\r\n    \"#FF1493\",\r\n    \"#7CFC00\",\r\n    \"#00FA9A\",\r\n    \"#F0E68C\",\r\n    \"#5F9EA0\",\r\n    \"#7B68EE\",\r\n    \"#9400D3\",\r\n    \"#FF6347\",\r\n    \"#6A5ACD\",\r\n    \"#00FF7F\",\r\n    \"#FA8072\",\r\n    \"#20B2AA\",\r\n    \"#778899\",\r\n    \"#B0C4DE\",\r\n    \"#FFDEAD\",\r\n    \"#7FFF00\",\r\n    \"#8A2BE2\",\r\n    \"#FFB6C1\",\r\n    \"#00FF00\",\r\n    \"#4169E1\" // Royal Blue\r\n];\r\nfunction calculateFontColor(color) {\r\n    const rgb = parseInt(color.slice(1), 16);\r\n    const r = (rgb >> 16) & 0xFF;\r\n    const g = (rgb >> 8) & 0xFF;\r\n    const b = rgb & 0xFF;\r\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n    return luminance > 0.5 ? \"#000\" : \"#fff\";\r\n}\r\nexports.calculateFontColor = calculateFontColor;\r\nvar PortType;\r\n(function (PortType) {\r\n    PortType[PortType[\"INPUT\"] = 0] = \"INPUT\";\r\n    PortType[PortType[\"OUTPUT\"] = 1] = \"OUTPUT\";\r\n})(PortType = exports.PortType || (exports.PortType = {}));\r\nclass NodeCreator {\r\n    static createData(name, inputCount, outputCount, parent) {\r\n        const nodeHolder = (0, utils_1.createDiv)({ classes: [\"holder\"], parent: parent });\r\n        const body = (0, utils_1.createDiv)({ classes: [\"node\", \"preload\"], parent: nodeHolder }, (0, utils_1.createDiv)({ classes: [\"name\"], innerText: name }));\r\n        const color = exports.PossibleColors[Math.floor(Math.random() * exports.PossibleColors.length)];\r\n        const textColor = calculateFontColor(color);\r\n        body.style.setProperty(\"--node-name-color\", textColor);\r\n        body.style.setProperty(\"--node-color\", color);\r\n        const inputPort = (0, utils_1.createDiv)({ classes: [\"input_ports\"], parent: body });\r\n        const outputPort = (0, utils_1.createDiv)({ classes: [\"output_ports\"], parent: body });\r\n        const inputs = [];\r\n        const outputs = [];\r\n        for (let i = 0; i < inputCount; i++) {\r\n            const element = (0, utils_1.createDiv)({ classes: [\"input\"], parent: inputPort });\r\n            inputs.push({ body: element, name: `Input ${i}`, type: PortType.INPUT });\r\n        }\r\n        for (let i = 0; i < outputCount; i++) {\r\n            const element = (0, utils_1.createDiv)({ classes: [\"output\"], parent: outputPort });\r\n            outputs.push({ body: element, name: `Output ${i}`, type: PortType.OUTPUT });\r\n        }\r\n        return { body, name, inputs, outputs, color, textColor };\r\n    }\r\n    static cloneData(data) {\r\n        const body = (0, utils_1.createDiv)({ classes: [\"node\", \"preload\"] }, (0, utils_1.createDiv)({ classes: [\"name\"], innerText: data.name }));\r\n        body.style.setProperty(\"--node-color\", data.color);\r\n        body.style.setProperty(\"--node-name-color\", data.textColor);\r\n        const inputPort = (0, utils_1.createDiv)({ classes: [\"input_ports\"], parent: body });\r\n        const outputPort = (0, utils_1.createDiv)({ classes: [\"output_ports\"], parent: body });\r\n        const inputs = [];\r\n        const outputs = [];\r\n        for (let i = 0; i < data.inputs.length; i++) {\r\n            const element = (0, utils_1.createDiv)({ classes: [\"input\"], parent: inputPort });\r\n            inputs.push({ body: element, name: `Input ${i}`, type: PortType.INPUT });\r\n        }\r\n        for (let i = 0; i < data.outputs.length; i++) {\r\n            const element = (0, utils_1.createDiv)({ classes: [\"output\"], parent: outputPort });\r\n            outputs.push({ body: element, name: `Output ${i}`, type: PortType.OUTPUT });\r\n        }\r\n        return Object.assign(Object.assign({}, data), { body, inputs, outputs });\r\n    }\r\n    static createTemplateNode(data) {\r\n        const box = data.body.getBoundingClientRect();\r\n        const centerX = box.left + box.width / 2;\r\n        const centerY = box.top + box.height / 2;\r\n        const width = box.width;\r\n        console.log(data);\r\n        const clone = this.cloneData(data);\r\n        clone.body.style.width = `${width}px`;\r\n        return new TemplateNode_1.TemplateNode(clone, centerX, centerY);\r\n    }\r\n}\r\nexports.NodeCreator = NodeCreator;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/nodes/NodeCreator.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/nodes/NodeInterface.ts":
/*!*******************************************************!*\
  !*** ./src/main/simulation/ui/nodes/NodeInterface.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.NodeInterface = void 0;\r\nconst utils_1 = __webpack_require__(/*! ../../../core/utils */ \"./src/main/core/utils.ts\");\r\nconst NodeCreator_1 = __webpack_require__(/*! ./NodeCreator */ \"./src/main/simulation/ui/nodes/NodeCreator.ts\");\r\nconst AttachedMouse_1 = __webpack_require__(/*! ../../utils/AttachedMouse */ \"./src/main/simulation/utils/AttachedMouse.ts\");\r\nconst mouse_1 = __webpack_require__(/*! ../../../core/mouse */ \"./src/main/core/mouse.ts\");\r\nclass NodeInterface {\r\n    constructor() {\r\n        this.allNodes = [];\r\n        this.expanded = false;\r\n        this.toggleable = true;\r\n        this.dragging = null;\r\n    }\r\n    initialize(root) {\r\n        this.root = root;\r\n        this.body = (0, utils_1.getElementById)(\"node-interface\");\r\n        this.selection = (0, utils_1.getElementByQuery)(\"#node-interface #selection\");\r\n        { // Selection\r\n            this.selection.addEventListener(\"scroll\", this.fixScrollFading.bind(this));\r\n            window.addEventListener(\"resize\", this.fixScrollFading.bind(this));\r\n        }\r\n        { // Handle\r\n            const handle = (0, utils_1.getElementById)(\"drawer-handle\");\r\n            handle.addEventListener(\"click\", () => this.toggleSelection());\r\n        }\r\n        { // Closing Selection\r\n            const playground = (0, utils_1.getElementById)(\"node-playground\");\r\n            const attachment = AttachedMouse_1.AttachedMouse.getAttachment(playground);\r\n            attachment.onUp = this.toggleSelection.bind(this, true);\r\n        }\r\n        { // Dragging Node\r\n            const windowMouse = this.root.windowMouse;\r\n            windowMouse.onLeave = () => {\r\n                if (!this.dragging)\r\n                    return;\r\n                this.dragging.stopDragging();\r\n                this.dragging = null;\r\n            };\r\n        }\r\n        this.removeLater();\r\n    }\r\n    removeLater() {\r\n        for (let i = 0; i < 15; i++) {\r\n            const inputAmount = Math.floor(Math.random() * 3) + 1;\r\n            this.setupNode(\"Node\", inputAmount, 1);\r\n        }\r\n        this.fixScrollFading();\r\n        // for (let i = 0; i < 15; i++) {\r\n        //     this.createNewTemplate();\r\n        // }\r\n    }\r\n    setupNode(name, inputAmount, outputAmount) {\r\n        const node = NodeCreator_1.NodeCreator.createData(name, inputAmount, outputAmount, this.selection);\r\n        this.allNodes.push(node);\r\n        let interval = null;\r\n        const nodeBody = node.body;\r\n        const nodeAttached = AttachedMouse_1.AttachedMouse.getAttachment(nodeBody);\r\n        nodeAttached.onDownRaw = event => {\r\n            if (event.button !== mouse_1.ButtonType.LEFT)\r\n                return;\r\n            interval = setTimeout(() => {\r\n                this.dragging = NodeCreator_1.NodeCreator.createTemplateNode(node);\r\n                this.dragging.initialize(this.root, event);\r\n                this.toggleSelection(false);\r\n            }, 100);\r\n        };\r\n        nodeAttached.onClick = () => {\r\n            if (interval)\r\n                clearInterval(interval);\r\n        };\r\n        return node;\r\n    }\r\n    fixScrollFading() {\r\n        const selectionRect = this.selection.getBoundingClientRect();\r\n        for (const node of this.allNodes) {\r\n            const nodeRect = node.body.getBoundingClientRect();\r\n            const topDiff = selectionRect.top - nodeRect.top;\r\n            const bottomDiff = nodeRect.bottom - selectionRect.bottom;\r\n            const diff = Math.max(topDiff, bottomDiff);\r\n            if (diff > 0) {\r\n                let alpha = diff / nodeRect.height / 0.6;\r\n                alpha = Math.min(1, Math.max(0, alpha));\r\n                node.body.style.setProperty(\"--node-scale-multiplier\", String(1 - alpha * 0.15));\r\n            }\r\n            else {\r\n                node.body.style.setProperty(\"--node-scale-multiplier\", \"1\");\r\n            }\r\n        }\r\n    }\r\n    toggleSelection(outside = false) {\r\n        if (!this.toggleable)\r\n            return;\r\n        if (outside && !this.expanded)\r\n            return;\r\n        this.toggleable = false;\r\n        this.expanded = !this.expanded;\r\n        if (this.expanded) {\r\n            this.getAudio(\"opening\").play();\r\n        }\r\n        else {\r\n            this.getAudio(\"closing\").play();\r\n        }\r\n        (0, utils_1.getElementById)(\"node-playground\").style.filter = `blur(${this.expanded ? 2 : 0}px)`;\r\n        setTimeout(() => this.toggleable = true, 400);\r\n        (0, utils_1.toggleClass)(this.body, \"expanded\");\r\n    }\r\n    getAudio(state) {\r\n        return (0, utils_1.getElementById)(`drawer-${state}`);\r\n    }\r\n}\r\nexports.NodeInterface = NodeInterface;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/nodes/NodeInterface.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/nodes/TemplateNode.ts":
/*!******************************************************!*\
  !*** ./src/main/simulation/ui/nodes/TemplateNode.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TemplateNode = void 0;\r\nconst AttachedMouse_1 = __webpack_require__(/*! ../../utils/AttachedMouse */ \"./src/main/simulation/utils/AttachedMouse.ts\");\r\nconst mouse_1 = __webpack_require__(/*! ../../../core/mouse */ \"./src/main/core/mouse.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../../../core/utils */ \"./src/main/core/utils.ts\");\r\nclass TemplateNode {\r\n    constructor(data, x, y) {\r\n        this.relativeX = 0;\r\n        this.relativeY = 0;\r\n        this.dragging = false;\r\n        this.dragX = 0;\r\n        this.dragY = 0;\r\n        this.grabBlock = false;\r\n        this.dragDiv = (0, utils_1.getElementById)(\"node-drag\");\r\n        this.data = data;\r\n        this.body = data.body;\r\n        this.centerX = x;\r\n        this.centerY = y;\r\n        this.updateTransform();\r\n        this.body.classList.add(\"template\");\r\n    }\r\n    initialize(root, event) {\r\n        this.root = root;\r\n        { // Dragging\r\n            // When initialize called, the node is already in dragging state\r\n            this.startDragging(event);\r\n            const attach = AttachedMouse_1.AttachedMouse.getAttachment(this.data.body);\r\n            attach.onUp = button => {\r\n                if (button !== mouse_1.ButtonType.LEFT)\r\n                    return;\r\n                this.stopDragging();\r\n            };\r\n            attach.onDownRaw = event => {\r\n                if (event.button !== mouse_1.ButtonType.LEFT)\r\n                    return;\r\n                if (this.grabBlock) {\r\n                    this.grabBlock = false;\r\n                    return;\r\n                }\r\n                this.root.nodeInterface.toggleSelection(true);\r\n                this.startDragging(event);\r\n            };\r\n            const windowMouse = root.windowMouse;\r\n            windowMouse.onMoveRaw = event => {\r\n                if (!this.dragging)\r\n                    return;\r\n                this.updatePosition(event.clientX + this.dragX, event.clientY + this.dragY);\r\n            };\r\n        }\r\n        { // Ports\r\n            const allPorts = [...this.data.inputs, ...this.data.outputs];\r\n            allPorts.forEach(port => {\r\n                const attach = AttachedMouse_1.AttachedMouse.getAttachment(port.body);\r\n                attach.onDownRaw = event => {\r\n                    if (event.button !== mouse_1.ButtonType.LEFT)\r\n                        return;\r\n                    this.grabBlock = true;\r\n                    const template = this.root.activeTemplate;\r\n                    const connectionManager = template.getConnectionManager();\r\n                    connectionManager.toggleConnection(port);\r\n                };\r\n            });\r\n        }\r\n    }\r\n    startDragging(event) {\r\n        if (this.dragging)\r\n            return;\r\n        this.root.templateInterface.removeTemplateNode(this);\r\n        this.dragDiv.appendChild(this.body);\r\n        this.body.classList.add(\"dragging\");\r\n        this.dragging = true;\r\n        this.dragX = this.centerX - event.clientX;\r\n        this.dragY = this.centerY - event.clientY;\r\n    }\r\n    stopDragging() {\r\n        if (!this.dragging)\r\n            return;\r\n        this.dragDiv.removeChild(this.body);\r\n        this.root.templateInterface.addTemplateNode(this);\r\n        this.body.classList.remove(\"dragging\");\r\n        this.dragging = false;\r\n    }\r\n    updatePosition(dx, dy) {\r\n        this.centerX = dx;\r\n        this.centerY = dy;\r\n        this.updateTransform();\r\n    }\r\n    updateRelative(relativeX, relativeY) {\r\n        this.relativeX += relativeX;\r\n        this.relativeY += relativeY;\r\n        this.updateTransform();\r\n    }\r\n    updateTransform() {\r\n        const centerX = this.centerX + this.relativeX;\r\n        const centerY = this.centerY + this.relativeY;\r\n        this.body.style.left = `${centerX}px`;\r\n        this.body.style.top = `${centerY}px`;\r\n    }\r\n    activate() {\r\n        this.body.style.display = \"flex\";\r\n    }\r\n    deactivate() {\r\n        this.body.style.display = \"none\";\r\n    }\r\n}\r\nexports.TemplateNode = TemplateNode;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/nodes/TemplateNode.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/templates/Template.ts":
/*!******************************************************!*\
  !*** ./src/main/simulation/ui/templates/Template.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Template = void 0;\r\nconst TemplateEnvironment_1 = __webpack_require__(/*! ./TemplateEnvironment */ \"./src/main/simulation/ui/templates/TemplateEnvironment.ts\");\r\nclass Template {\r\n    constructor(root, body, name) {\r\n        this.environment = new TemplateEnvironment_1.TemplateEnvironment();\r\n        this.body = body;\r\n        this.body = body;\r\n        this.name = name;\r\n        this.environment.initialize(root);\r\n    }\r\n    addNode(node) {\r\n        this.environment.addNode(node);\r\n    }\r\n    removeNode(node) {\r\n        this.environment.removeNode(node);\r\n    }\r\n    activate() {\r\n        this.body.classList.add(\"active\");\r\n        this.environment.activate();\r\n    }\r\n    deactivate() {\r\n        this.body.classList.remove(\"active\");\r\n        this.environment.deactivate();\r\n    }\r\n    getEnvironment() {\r\n        return this.environment;\r\n    }\r\n    getConnectionManager() {\r\n        return this.environment.connectionManager;\r\n    }\r\n}\r\nexports.Template = Template;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/templates/Template.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/templates/TemplateEnvironment.ts":
/*!*****************************************************************!*\
  !*** ./src/main/simulation/ui/templates/TemplateEnvironment.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TemplateEnvironment = void 0;\r\nconst mouse_1 = __webpack_require__(/*! ../../../core/mouse */ \"./src/main/core/mouse.ts\");\r\nconst utils_1 = __webpack_require__(/*! ../../../core/utils */ \"./src/main/core/utils.ts\");\r\nconst AttachedMouse_1 = __webpack_require__(/*! ../../utils/AttachedMouse */ \"./src/main/simulation/utils/AttachedMouse.ts\");\r\nconst ConnectionManager_1 = __webpack_require__(/*! ../connections/ConnectionManager */ \"./src/main/simulation/ui/connections/ConnectionManager.ts\");\r\nclass TemplateEnvironment {\r\n    constructor() {\r\n        this.activeState = false;\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.templateNodes = [];\r\n        this.connectionManager = new ConnectionManager_1.ConnectionManager();\r\n        this.grabbing = false;\r\n        this.background = (0, utils_1.getElementById)(\"background\");\r\n        this.nodeHolder = (0, utils_1.getElementById)(\"node-holder\");\r\n        this.canvas = (0, utils_1.getElementById)(\"playground-canvas\");\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.width = window.innerWidth;\r\n        this.height = window.innerHeight;\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n    }\r\n    initialize(root) {\r\n        this.root = root;\r\n        this.connectionManager.initialize(this.root);\r\n        { // Window resize\r\n            window.addEventListener(\"resize\", () => {\r\n                this.width = window.innerWidth;\r\n                this.height = window.innerHeight;\r\n                this.canvas.width = this.width;\r\n                this.canvas.height = this.height;\r\n                // this.ctx.reset();\r\n                this.ctx.translate(this.width / 2, this.height / 2);\r\n            });\r\n            // this.ctx.reset();\r\n            this.ctx.translate(this.width / 2, this.height / 2);\r\n        }\r\n        { // Canvas movement\r\n            const playground = (0, utils_1.getElementById)(\"node-playground\");\r\n            const attachment = AttachedMouse_1.AttachedMouse.getAttachment(playground);\r\n            attachment.onDown = (button) => {\r\n                if (this.activeState && button === mouse_1.ButtonType.RIGHT)\r\n                    this.grabbing = true;\r\n            };\r\n            attachment.onUp = (button) => {\r\n                if (this.activeState && button === mouse_1.ButtonType.RIGHT)\r\n                    this.grabbing = false;\r\n            };\r\n            attachment.onLeave = () => this.grabbing = false;\r\n            attachment.onMove = (dx, dy) => {\r\n                if (!this.activeState || !this.grabbing)\r\n                    return;\r\n                this.x += dx;\r\n                this.y += dy;\r\n                this.templateNodes.forEach(node => node.updateRelative(dx, dy));\r\n            };\r\n        }\r\n    }\r\n    updateFrame() {\r\n        // Clear canvas\r\n        this.ctx.clearRect(-this.width / 2, -this.height / 2, this.width, this.height);\r\n        { // Render background lines\r\n            this.ctx.save();\r\n            this.ctx.translate(this.x, this.y);\r\n            this.renderGrids();\r\n            this.ctx.restore();\r\n        }\r\n        { // Render connections\r\n            this.ctx.save();\r\n            this.ctx.translate(-this.width / 2, -this.height / 2);\r\n            this.connectionManager.render(this.ctx);\r\n            this.ctx.restore();\r\n        }\r\n    }\r\n    addNode(node) {\r\n        if (this.templateNodes.includes(node))\r\n            return;\r\n        this.nodeHolder.appendChild(node.body);\r\n        this.templateNodes.push(node);\r\n    }\r\n    removeNode(node) {\r\n        if (!this.templateNodes.includes(node))\r\n            return;\r\n        this.nodeHolder.removeChild(node.body);\r\n        this.templateNodes.splice(this.templateNodes.indexOf(node), 1);\r\n    }\r\n    renderGrids() {\r\n        this.background.style.left = `${this.x}px`;\r\n        this.background.style.top = `${this.y}px`;\r\n        this.lines(128, 2, \"#454570\");\r\n        this.lines(32, 1, \"#353560\");\r\n    }\r\n    lines(size, width, color) {\r\n        const ctx = this.ctx;\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = width;\r\n        const w = this.width / 2;\r\n        const h = this.height / 2;\r\n        const left = Math.floor(-w / size) * size;\r\n        const top = Math.floor(-h / size) * size;\r\n        const right = Math.ceil(w / size) * size;\r\n        const bottom = Math.ceil(h / size) * size;\r\n        for (let i = left; i < right; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(i * size, top * size);\r\n            ctx.lineTo(i * size, bottom * size);\r\n            ctx.stroke();\r\n        }\r\n        for (let i = top; i < bottom; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(left * size, i * size);\r\n            ctx.lineTo(right * size, i * size);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    activate() {\r\n        this.activeState = true;\r\n        this.templateNodes.forEach(node => node.activate());\r\n    }\r\n    deactivate() {\r\n        this.activeState = false;\r\n        this.templateNodes.forEach(node => node.deactivate());\r\n    }\r\n}\r\nexports.TemplateEnvironment = TemplateEnvironment;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/templates/TemplateEnvironment.ts?");

/***/ }),

/***/ "./src/main/simulation/ui/templates/TemplateInterface.ts":
/*!***************************************************************!*\
  !*** ./src/main/simulation/ui/templates/TemplateInterface.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TemplateInterface = void 0;\r\nconst utils_1 = __webpack_require__(/*! ../../../core/utils */ \"./src/main/core/utils.ts\");\r\nconst AttachedMouse_1 = __webpack_require__(/*! ../../utils/AttachedMouse */ \"./src/main/simulation/utils/AttachedMouse.ts\");\r\nconst Template_1 = __webpack_require__(/*! ./Template */ \"./src/main/simulation/ui/templates/Template.ts\");\r\nclass TemplateInterface {\r\n    constructor() {\r\n        this.templates = [];\r\n        this.namingTemplate = false;\r\n    }\r\n    initialize(root) {\r\n        this.root = root;\r\n        this.buffer = (0, utils_1.getElementById)(\"template-interface\");\r\n        this.hitBox = (0, utils_1.getElementById)(\"interface-hit-box\");\r\n        this.container = (0, utils_1.getElementById)(\"container\");\r\n        this.plus = (0, utils_1.getElementById)(\"buffer-more\");\r\n        const bufferMouse = AttachedMouse_1.AttachedMouse.getAttachment(this.hitBox);\r\n        bufferMouse.onEnter = this.toggleBuffer.bind(this, true);\r\n        bufferMouse.onLeave = this.toggleBuffer.bind(this, false);\r\n        this.plus.addEventListener(\"click\", () => this.createNewTemplate());\r\n        this.createMainTemplate();\r\n    }\r\n    updateFrame() {\r\n        this.activeTemplate.getEnvironment().updateFrame();\r\n    }\r\n    addTemplateNode(node) {\r\n        this.activeTemplate.addNode(node);\r\n    }\r\n    removeTemplateNode(node) {\r\n        this.activeTemplate.removeNode(node);\r\n    }\r\n    createMainTemplate() {\r\n        this.plus.remove();\r\n        const mainTemplate = (0, utils_1.createDiv)({\r\n            classes: [\"buffer\"],\r\n            innerText: \"Main\",\r\n            contentEditable: \"true\",\r\n            parent: this.container\r\n        });\r\n        const template = this.finalizeTemplate(mainTemplate);\r\n        this.container.appendChild(this.plus);\r\n        this.switchTemplate(template);\r\n    }\r\n    createNewTemplate() {\r\n        this.container.removeChild(this.plus);\r\n        const template = (0, utils_1.createDiv)({ classes: [\"buffer\"], contentEditable: \"true\", parent: this.container });\r\n        this.container.appendChild(this.plus);\r\n        template.addEventListener(\"keypress\", e => {\r\n            if (e.key !== \"Enter\")\r\n                return;\r\n            e.preventDefault();\r\n            template.blur();\r\n        });\r\n        template.addEventListener(\"focus\", () => {\r\n            this.buffer.classList.add(\"expanded-edit\");\r\n            this.namingTemplate = true;\r\n        });\r\n        template.addEventListener(\"blur\", () => {\r\n            this.namingTemplate = false;\r\n            if (template.innerText === \"\") {\r\n                template.remove();\r\n                return;\r\n            }\r\n            this.buffer.classList.remove(\"expanded-edit\");\r\n            this.finalizeTemplate(template);\r\n        });\r\n        template.addEventListener(\"click\", () => {\r\n            if (this.namingTemplate)\r\n                return;\r\n        });\r\n        template.focus();\r\n    }\r\n    toggleBuffer(state) {\r\n        const classList = this.buffer.classList;\r\n        if (classList.contains(\"expanded\") === state)\r\n            return;\r\n        if (state)\r\n            classList.add(\"expanded\");\r\n        else\r\n            classList.remove(\"expanded\");\r\n    }\r\n    finalizeTemplate(template) {\r\n        template.contentEditable = \"false\";\r\n        const name = template.innerText;\r\n        const templateInstance = new Template_1.Template(this.root, template, name);\r\n        this.templates.push(templateInstance);\r\n        template.addEventListener(\"click\", () => this.switchTemplate(templateInstance));\r\n        return templateInstance;\r\n    }\r\n    switchTemplate(template) {\r\n        var _a;\r\n        if (this.activeTemplate === template)\r\n            return;\r\n        (_a = this.activeTemplate) === null || _a === void 0 ? void 0 : _a.deactivate();\r\n        this.activeTemplate = template;\r\n        this.root.activeTemplate = template;\r\n        template.activate();\r\n    }\r\n}\r\nexports.TemplateInterface = TemplateInterface;\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/ui/templates/TemplateInterface.ts?");

/***/ }),

/***/ "./src/main/simulation/utils/AttachedMouse.ts":
/*!****************************************************!*\
  !*** ./src/main/simulation/utils/AttachedMouse.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AttachedMouse = void 0;\r\nclass AttachedMouse {\r\n    constructor(element) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.element = element;\r\n        this.element.addEventListener(\"mousemove\", e => {\r\n            this.x = e.clientX;\r\n            this.y = e.clientY;\r\n        });\r\n    }\r\n    static getAttachment(element) {\r\n        if (AttachedMouse.instances.has(element))\r\n            return AttachedMouse.instances.get(element);\r\n        return new AttachedMouse(element);\r\n    }\r\n    //-------------------------- Listener Methods --------------------------//\r\n    set onDown(fun) {\r\n        this.element.addEventListener(\"mousedown\", e => fun(e.button));\r\n    }\r\n    set onUp(fun) {\r\n        this.element.addEventListener(\"mouseup\", e => fun(e.button));\r\n    }\r\n    set onClick(fun) {\r\n        this.element.addEventListener(\"click\", e => fun(e.button));\r\n    }\r\n    set onMove(fun) {\r\n        this.element.addEventListener(\"mousemove\", e => fun(e.movementX, e.movementY));\r\n    }\r\n    set onDrag(fun) {\r\n        this.element.addEventListener(\"drag\", e => fun(e.movementX, e.movementY));\r\n    }\r\n    set onDragStart(fun) {\r\n        this.element.addEventListener(\"dragstart\", () => fun());\r\n    }\r\n    set onDragStop(fun) {\r\n        this.element.addEventListener(\"dragend\", () => fun());\r\n    }\r\n    set onDragOver(fun) {\r\n        this.element.addEventListener(\"dragover\", () => fun());\r\n    }\r\n    set onEnter(fun) {\r\n        this.element.addEventListener(\"mouseenter\", () => fun());\r\n    }\r\n    set onLeave(fun) {\r\n        this.element.addEventListener(\"mouseleave\", () => fun());\r\n    }\r\n    set onWheel(fun) {\r\n        this.element.addEventListener(\"wheel\", e => fun(e.deltaY));\r\n    }\r\n    //-------------------------- Raw Methods --------------------------//\r\n    set onDownRaw(fun) {\r\n        this.element.addEventListener(\"mousedown\", fun);\r\n    }\r\n    set onUpRaw(fun) {\r\n        this.element.addEventListener(\"mouseup\", fun);\r\n    }\r\n    set onClickRaw(fun) {\r\n        this.element.addEventListener(\"click\", fun);\r\n    }\r\n    set onMoveRaw(fun) {\r\n        this.element.addEventListener(\"mousemove\", fun);\r\n    }\r\n    set onDragRaw(fun) {\r\n        this.element.addEventListener(\"drag\", fun);\r\n    }\r\n    set onDragStartRaw(fun) {\r\n        this.element.addEventListener(\"dragstart\", fun);\r\n    }\r\n    set onDragStopRaw(fun) {\r\n        this.element.addEventListener(\"dragend\", fun);\r\n    }\r\n    set onDragOverRaw(fun) {\r\n        this.element.addEventListener(\"dragover\", fun);\r\n    }\r\n    set onEnterRaw(fun) {\r\n        this.element.addEventListener(\"mouseenter\", fun);\r\n    }\r\n    set onLeaveRaw(fun) {\r\n        this.element.addEventListener(\"mouseleave\", fun);\r\n    }\r\n    set onWheelRaw(fun) {\r\n        this.element.addEventListener(\"wheel\", fun);\r\n    }\r\n}\r\nexports.AttachedMouse = AttachedMouse;\r\nAttachedMouse.instances = new Map();\r\n\n\n//# sourceURL=webpack://sdf_studio/./src/main/simulation/utils/AttachedMouse.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;